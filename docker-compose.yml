version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    networks:
      - data-center
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870
      - 9000:9000
    restart: always

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    networks:
      - data-center
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    ports:
      - 9864:9864
    restart: always

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    networks:
      - data-center
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    ports:
      - 8088:8088
    restart: always

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    networks:
      - data-center
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - 8042:8042
    restart: always

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    networks:
      - data-center
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - 8188:8188
    restart: always

  zoo:
    image: zookeeper:3.4.10
    container_name: zoo
    networks:
      - data-center
    volumes:
      - zoo_data:/data
      - zoo_log_data:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    ports:
      - 2181:2181
    restart: always

  # hbase-master:
  #   image: bde2020/hbase-master:1.0.0-hbase1.2.6
  #   container_name: hbase-master
  #   networks:
  #     - data-center
  #   hostname: hbase-master
  #   volumes:
  #     - hbase_master_data:/hbase-data
  #   env_file:
  #     - ./hbase-distributed-local.env
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 zoo:2181"
  #   ports:
  #     - 16010:16010
  #   restart: always

  # hbase-region:
  #   image: bde2020/hbase-regionserver:1.0.0-hbase1.2.6
  #   container_name: hbase-regionserver
  #   networks:
  #     - data-center
  #   hostname: hbase-regionserver
  #   volumes:
  #     - hbase_region_data:/hbase-data
  #   env_file:
  #     - ./hbase-distributed-local.env
  #   environment:
  #     HBASE_CONF_hbase_regionserver_hostname: hbase-region
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 zoo:2181 hbase-master:16010"
  #   ports:
  #     - 16030:16030
  #   restart: always

  hbase-base-custom:
    image: hbase-base
    build:
      context: ./builds/hbase/base
      dockerfile: Dockerfile
      args:
        version: "2.2.4"
    env_file:
      - ./hbase-distributed-local.env

  hbase-master:
    image: hbase-base/master
    build:
      context: ./builds/hbase/hmaster
      dockerfile: Dockerfile
    container_name: hbase-master
    networks:
      - data-center
    hostname: hbase-master
    volumes:
      - hbase_master_data:/hbase-data
    env_file:
      - ./hbase-distributed-local.env
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 zoo:2181"
    ports:
      - 16000:16000
      - 16010:16010
    restart: always

  hbase-region:
    image: hbase-base/regionserver
    build:
      context: ./builds/hbase/hregionserver
      dockerfile: Dockerfile
    container_name: hbase-region
    networks:
      - data-center
    hostname: hbase-region
    volumes:
      - hbase_region_data:/hbase-data
    env_file:
      - ./hbase-distributed-local.env
    environment:
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-region
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 zoo:2181 hbase-master:16010"
    ports:
      - 16030:16030
      - 16020:16020
    restart: always

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    networks:
      - data-center
    volumes:
      - ./data:/data
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    restart: always

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    networks:
      - data-center
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    restart: always

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    networks:
      - data-center
    restart: always

  hive-metastore-postgresql-custom:
    image: custom/hive-metastore-postgresql:latest
    build:
      context: ./builds/hive-posgres
      dockerfile: Dockerfile
    container_name: hive-metastore-postgresql
    networks:
      - data-center
    volumes:
      - posgre_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  hbase_master_data:
  hbase_region_data:
  posgre_db:
  zoo_data:
  zoo_log_data:

networks:
  data-center: